@model IEnumerable<ChatterBox.Models.Group>
@using Microsoft.AspNetCore.Identity
@inject UserManager<ChatterBox.Models.ApplicationUser> UserManager
@{
    ViewData["Title"] = "Groups";
}

<div class="container-fluid p-4">
    <div class="row g-4">
        <div class="col-md-4">
            <div class="card">
                <div class="card-header d-flex align-items-center justify-content-between">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-people-fill me-2"></i>
                        <h5 class="mb-0">Groups</h5>
                    </div>
                    <a asp-action="Create" class="btn btn-primary btn-sm">
                        <i class="bi bi-plus-lg me-1"></i>
                        Create Group
                    </a>
                </div>
                <div class="card-body p-2">
                    @if (Model != null && Model.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var group in Model)
                            {
                                <div class="list-group-item">
                                    <div class="d-flex flex-column">
                                        <div class="d-flex justify-content-between align-items-center mb-2">
                                            <div class="d-flex align-items-center">
                                                <div class="user-avatar me-3">
                                                    @if (group.IsPrivate)
                                                    {
                                                        <i class="bi bi-lock-fill"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="bi bi-people-fill"></i>
                                                    }
                                                </div>
                                                <div>
                                                    <h6 class="mb-1">@group.Name</h6>
                                                    <small class="text-muted">
                                                        Created by @group.CreatedBy?.UserName
                                                    </small>
                                                </div>
                                            </div>
                                            <span class="badge bg-primary rounded-pill">
                                                @(group.Members?.Count ?? 0) members
                                            </span>
                                        </div>
                                        <div class="d-flex gap-2">
                                            <a asp-action="Details" asp-route-id="@group.GroupId"
                                               class="btn btn-outline-primary btn-sm flex-grow-1">
                                                <i class="bi bi-chat-dots-fill me-1"></i>
                                                Open Chat
                                            </a>
                                            @if (group.CurrentAdminId == UserManager.GetUserId(User) || ViewBag.IsSystemAdmin)
                                            {
                                                <div class="btn-group flex-grow-1" role="group">
                                                    <a asp-action="ManageMembers" asp-route-id="@group.GroupId"
                                                       class="btn btn-outline-secondary btn-sm">
                                                        <i class="bi bi-person-gear"></i>
                                                    </a>
                                                    <a asp-action="Edit" asp-route-id="@group.GroupId"
                                                       class="btn btn-outline-secondary btn-sm">
                                                        <i class="bi bi-pencil"></i>
                                                    </a>
                                                    <button type="button"
                                                            class="btn btn-outline-danger btn-sm delete-group"
                                                            data-group-id="@group.GroupId">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="bi bi-people fs-1 text-muted"></i>
                            <p class="mt-2 text-muted">No groups available. Create a new group to get started!</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="card">
                <div class="card-header d-flex align-items-center">
                    <i class="bi bi-info-circle-fill me-2"></i>
                    <h5 class="mb-0">Groups Overview</h5>
                </div>
                <div class="card-body">
                    @if (ViewBag.IsSystemAdmin)
                    {
                        <div class="admin-section mb-4">
                            <h6 class="mb-3">
                                <i class="bi bi-shield-fill-check me-2"></i>
                                System Admin Controls
                            </h6>
                            <ul class="list-group">
                                <li class="list-group-item">
                                    <i class="bi bi-eye-fill me-2"></i>
                                    View all groups (including private ones)
                                </li>
                                <li class="list-group-item">
                                    <i class="bi bi-person-gear me-2"></i>
                                    Manage users in any group
                                </li>
                                <li class="list-group-item">
                                    <i class="bi bi-pencil-fill me-2"></i>
                                    Edit any group's settings
                                </li>
                                <li class="list-group-item">
                                    <i class="bi bi-trash-fill me-2"></i>
                                    Delete any group
                                </li>
                            </ul>
                        </div>
                    }

                    <div class="group-stats">
                        <h6 class="mb-3">
                            <i class="bi bi-graph-up me-2"></i>
                            Group Statistics
                        </h6>
                        <div class="row g-3">
                            <div class="col-md-4">
                                <div class="border rounded p-3 text-center">
                                    <div class="fs-4 fw-bold text-primary">
                                        @Model.Count(g => g.Members.Any(m => m.UserId == UserManager.GetUserId(User)))
                                    </div>
                                    <small class="text-muted">Groups Joined</small>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="border rounded p-3 text-center">
                                    <div class="fs-4 fw-bold text-primary">
                                        @Model.Count(g => g.CreatedById == UserManager.GetUserId(User))
                                    </div>
                                    <small class="text-muted">Groups Created</small>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="border rounded p-3 text-center">
                                    <div class="fs-4 fw-bold text-primary">
                                        @Model.Count(g => g.IsPrivate && g.Members.Any(m => m.UserId == UserManager.GetUserId(User)))
                                    </div>
                                    <small class="text-muted">Private Groups</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('.delete-group').on('click', function() {
                const groupId = $(this).data('group-id');
                if (confirm('Are you sure you want to delete this group? This action cannot be undone.')) {
                    $.post(`/Groups/DeleteConfirmed/${groupId}`, {
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    })
                    .done(function() {
                        location.reload();
                    })
                    .fail(function() {
                        alert('Failed to delete group. Please try again.');
                    });
                }
            });
        });
    </script>
}